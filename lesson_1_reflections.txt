How did viewing a diff between two versions of a file help you see the bug
that was introduced?

If the bug did not exist in the old version of the file, then one of the
changes in the new version must contain the cause of the bug.  Looking at the
diff of the two files helped to narrow down the possible causes of the bug.


How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

You don't have to maintain large numbers of old copies to be able to look back
at a change that was made long ago.


What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like
Google Docs does?

You have more control and can make sure versions have meaningful differences
with Git, but you can also go too long without a commit.


Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file
separately?

Git is more tailored to code files which are often interrelated.
Google Docs is just centered around one file at a time.


How can you use the commands git log and git diff to view the history of
files?

Git log displays all the commits, and you can take the diff of two commits
to see the history of all the files in the repository.


How might using version control make you more confident to make changes that
could break something?

I know I can always revert to a former state and undo the changes that broke.


Now that you have your workspace set up, what do you want to try using Git
for?

I want to use git to post my work on github.
